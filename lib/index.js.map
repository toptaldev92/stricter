{"version":3,"sources":["/src/index.ts","/src/stricter.ts","/src/config/index.ts","/src/config/read-config.ts","/src/config/process-config.ts","/src/config/validate-config.ts","/src/rule/index.ts","/src/utils/index.ts","/src/rule/default-rules/index.ts","/src/processor/index.ts","/src/types/index.ts","/src/dependencies/index.ts","/src/dependencies/extract-path.ts","/src/dependencies/resolve-import.ts","/src/dependencies/parse-imports.ts","/src/logger/index.ts","/src/logger/console.ts","/src/logger/mocha.ts","/src/logger/flatten.ts","/src/cli.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["export { default as stricter } from './stricter';\r\nexport { default as cli } from './cli';\r\nexport { readFilesData } from './processor';\r\nexport { default as readDependencies } from './dependencies';\r\n","import { getConfig } from './config';\r\nimport { getRuleDefinitions, getRuleApplications, filterFilesToProcess } from './rule';\r\nimport { applyProjectRules, readFilesData } from './processor';\r\nimport { default as readDependencies } from './dependencies';\r\nimport { consoleLogger, mochaLogger, compactProjectLogs, getErrorCount } from './logger';\r\nimport { listFiles } from './utils';\r\nimport { StricterArguments, Reporter } from './types';\r\n\r\nexport default ({\r\n    silent = false,\r\n    reporter = Reporter.CONSOLE,\r\n    configPath,\r\n}: StricterArguments): number => {\r\n    if (!silent) {\r\n        console.log('Stricter: Checking...');\r\n    }\r\n\r\n    const config = getConfig(configPath);\r\n\r\n    const fileList = listFiles(config.root);\r\n\r\n    const ruleDefinitions = getRuleDefinitions(config);\r\n    const ruleApplications = getRuleApplications(config, ruleDefinitions);\r\n    const filesToProcess = filterFilesToProcess(config.root, fileList, ruleApplications);\r\n\r\n    const filesData = readFilesData(filesToProcess);\r\n    const dependencies = readDependencies(filesData, [config.root], config.extensions);\r\n    const projectResult = applyProjectRules(config.root, filesData, dependencies, ruleApplications);\r\n\r\n    const logs = compactProjectLogs(projectResult);\r\n\r\n    if (reporter === Reporter.MOCHA) {\r\n        mochaLogger(logs);\r\n    } else {\r\n        consoleLogger(logs);\r\n    }\r\n\r\n    const result = getErrorCount(logs);\r\n\r\n    if (!silent) {\r\n        if (result === 0) {\r\n            console.log('Stricter: No errors');\r\n        } else {\r\n            console.log(`Stricter: ${result} error${result > 1 ? 's' : ''}`);\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n","import { Config } from './../types';\r\nimport readConfig from './read-config';\r\nimport processConfig from './process-config';\r\nimport validateConfig from './validate-config';\r\n\r\nexport const getConfig = (configPath?: string): Config => {\r\n    const foundConfig = readConfig(configPath);\r\n    validateConfig(foundConfig);\r\n    const processedConfig = processConfig(foundConfig);\r\n\r\n    return processedConfig;\r\n};\r\n","import * as cosmiconfig from 'cosmiconfig';\r\nimport { CosmiConfig } from './../types';\r\n\r\nconst moduleName = 'stricter';\r\n\r\nexport default (configPath?: string): CosmiConfig => {\r\n    const explorer = cosmiconfig(moduleName, {\r\n        configPath,\r\n        sync: true,\r\n        packageProp: false,\r\n        rc: false,\r\n        format: 'js',\r\n    });\r\n    const foundConfigData = explorer.load(process.cwd());\r\n\r\n    return foundConfigData;\r\n};\r\n","import * as path from 'path';\r\nimport { Config, CosmiConfig } from './../types';\r\n\r\nexport const getDirResolver = (filepath: string) => (dir: string) =>\r\n    path.resolve(path.dirname(filepath), dir);\r\n\r\nexport default (foundConfig: CosmiConfig): Config => {\r\n    const { config, filepath } = foundConfig;\r\n    const resolveDir = getDirResolver(filepath);\r\n\r\n    const result: Config = {\r\n        root: resolveDir(config.root),\r\n        rules: {},\r\n    };\r\n\r\n    if (config.rulesDir) {\r\n        result.rulesDir = resolveDir(config.rulesDir);\r\n    }\r\n\r\n    if (config.rules) {\r\n        result.rules = config.rules;\r\n    }\r\n\r\n    if (config.extensions) {\r\n        result.extensions = config.extensions;\r\n    }\r\n\r\n    return result;\r\n};\r\n","export default (foundConfig: any): void => {\r\n    if (!foundConfig) {\r\n        throw new Error('No config found');\r\n    }\r\n\r\n    if (!foundConfig.config) {\r\n        throw new Error('No config contents found');\r\n    }\r\n\r\n    if (!foundConfig.config.root) {\r\n        throw new Error('No root specified');\r\n    }\r\n};\r\n","import * as path from 'path';\r\nimport { listFiles } from './../utils';\r\nimport { Config, RuleApplications, RuleDefinition, RuleDefinitions, RuleUsage } from './../types';\r\nimport { unusedFilesRule } from './default-rules';\r\n\r\nexport const defaultRules: RuleDefinitions = {\r\n    'stricter/unused-files': unusedFilesRule,\r\n};\r\n\r\nexport const RULE_SUFFIX = '.rule';\r\n\r\nconst stripOutSuffix = (str: string): string => {\r\n    return str.substring(0, str.length - RULE_SUFFIX.length);\r\n};\r\n\r\nexport const getRuleDefinitions = (config: Config): RuleDefinitions => {\r\n    if (!config.rulesDir) {\r\n        return defaultRules;\r\n    }\r\n\r\n    const ruleFiles = listFiles(config.rulesDir).filter(i => i.endsWith(`${RULE_SUFFIX}.js`));\r\n    const customRules = ruleFiles.reduce(\r\n        (acc, filePath: string) => {\r\n            const ruleName = path.basename(filePath, path.extname(filePath));\r\n            const rule = require(filePath);\r\n\r\n            if (!rule.onProject) {\r\n                throw new Error(`Rule ${ruleName} should have onProject.`);\r\n            }\r\n\r\n            return {\r\n                ...acc,\r\n                [stripOutSuffix(ruleName)]: rule as RuleDefinition,\r\n            };\r\n        },\r\n        {} as RuleDefinitions,\r\n    );\r\n\r\n    return { ...defaultRules, ...customRules };\r\n};\r\n\r\nexport const getRuleApplications = (\r\n    config: Config,\r\n    ruleDefinitions: RuleDefinitions,\r\n): RuleApplications => {\r\n    const usages = Object.keys(config.rules);\r\n    const notExistingRules = usages.filter(i => !ruleDefinitions[i]);\r\n\r\n    if (notExistingRules.length) {\r\n        throw new Error(\r\n            `Unable to find definitions for following rules:\\r\\n${notExistingRules.join('\\r\\n')}`,\r\n        );\r\n    }\r\n\r\n    const result = usages.reduce(\r\n        (acc, ruleName) => {\r\n            return {\r\n                ...acc,\r\n                [ruleName]: {\r\n                    definition: ruleDefinitions[ruleName],\r\n                    usage: config.rules[ruleName],\r\n                },\r\n            };\r\n        },\r\n        {} as RuleApplications,\r\n    );\r\n\r\n    return result;\r\n};\r\n\r\nconst getRuleUsages = (ruleApplications: RuleApplications): RuleUsage[] => {\r\n    return Object.values(ruleApplications).reduce(\r\n        (acc, i) => {\r\n            if (Array.isArray(i.usage)) {\r\n                return [...acc, ...i.usage];\r\n            }\r\n\r\n            return [...acc, i.usage];\r\n        },\r\n        [] as RuleUsage[],\r\n    );\r\n};\r\n\r\nconst checkForMatch = (setting: RegExp | RegExp[] | Function, filePath: string) => {\r\n    if (typeof setting === 'function') {\r\n        return setting(filePath);\r\n    }\r\n\r\n    const regexSetting = Array.isArray(setting) ? setting : [setting];\r\n\r\n    return regexSetting.some(i => i.test(filePath));\r\n};\r\n\r\nexport const matchesRuleUsage = (\r\n    directory: string,\r\n    filePath: string,\r\n    ruleUsage: RuleUsage,\r\n): boolean => {\r\n    const relativePath = filePath.replace(directory + path.sep, '');\r\n    const matchesInclude = !ruleUsage.include || checkForMatch(ruleUsage.include, relativePath);\r\n    const matchesExclude = ruleUsage.exclude && checkForMatch(ruleUsage.exclude, relativePath);\r\n\r\n    return matchesInclude && !matchesExclude;\r\n};\r\n\r\nexport const filterFilesToProcess = (\r\n    directory: string,\r\n    files: string[],\r\n    ruleApplications: RuleApplications,\r\n): string[] => {\r\n    const ruleUsages = getRuleUsages(ruleApplications);\r\n    const result = files.filter(i => ruleUsages.some(j => matchesRuleUsage(directory, i, j)));\r\n\r\n    return result;\r\n};\r\n","import * as fs from 'fs';\r\nimport * as path from 'path';\r\nimport * as parser from 'babylon';\r\n\r\nexport const readFile = (i: string): string => fs.readFileSync(i, 'utf8');\r\n\r\nexport const listFiles = (directory: string): string[] => {\r\n    const files = fs.statSync(directory).isDirectory()\r\n        ? fs\r\n              .readdirSync(directory)\r\n              .reduce((acc, f) => [...acc, ...listFiles(path.join(directory, f))], [])\r\n        : [directory];\r\n\r\n    return files;\r\n};\r\n\r\nconst defaultPlugins = [\r\n    'flow',\r\n    'jsx',\r\n    'doExpressions',\r\n    'objectRestSpread',\r\n    'decorators',\r\n    'classProperties',\r\n    'classPrivateProperties',\r\n    'classPrivateMethods',\r\n    'exportExtensions',\r\n    'asyncGenerators',\r\n    'functionBind',\r\n    'functionSent',\r\n    'dynamicImport',\r\n    'numericSeparator',\r\n    'optionalChaining',\r\n    'importMeta',\r\n    'bigInt',\r\n    'optionalCatchBinding',\r\n    'throwExpressions',\r\n    'pipelineOperator',\r\n    'nullishCoalescingOperator',\r\n];\r\n\r\nexport const parse = (source: string): any => {\r\n    const plugins = defaultPlugins;\r\n\r\n    const result = parser.parse(source, {\r\n        plugins,\r\n        allowImportExportEverywhere: true,\r\n        sourceType: 'script',\r\n    });\r\n\r\n    return result;\r\n};\r\n","import { OnProjectArgument, RuleDefinition, FileToDependency } from './../../types';\r\n\r\ntype EntryType = RegExp | RegExp[] | Function;\r\ntype Seen = { [prop: string]: boolean };\r\n\r\nconst dfs = (stack: string[], dependencies: FileToDependency, seen: Seen): void => {\r\n    while (stack.length) {\r\n        const fileName = stack.pop() as string;\r\n        seen[fileName] = true;\r\n\r\n        if (dependencies[fileName]) {\r\n            stack.push(...dependencies[fileName].filter(i => !seen[i]));\r\n        }\r\n    }\r\n};\r\n\r\nexport const unusedFilesRule: RuleDefinition = {\r\n    onProject: ({ config, dependencies, files }: OnProjectArgument) => {\r\n        if (!config || !config.entry || !Array.isArray(config.entry)) {\r\n            return [];\r\n        }\r\n\r\n        const entries: EntryType = config.entry;\r\n        const related: EntryType = config.relatedEntry || [];\r\n\r\n        const fileList = Object.keys(files);\r\n        const seen: { [prop: string]: boolean } = {};\r\n\r\n        const entryFiles = fileList.filter(i => checkForMatch(entries, i));\r\n        dfs(entryFiles, dependencies, seen);\r\n\r\n        const relatedFiles = fileList\r\n            .filter(i => checkForMatch(related, i) && !seen[i])\r\n            .filter(i => dependencies[i] && dependencies[i].some(j => seen[j]));\r\n        dfs(relatedFiles, dependencies, seen);\r\n\r\n        const unusedFiles = fileList.filter(i => !seen[i]);\r\n\r\n        return unusedFiles;\r\n    },\r\n};\r\n\r\nconst checkForMatch = (setting: EntryType, filePath: string) => {\r\n    if (typeof setting === 'function') {\r\n        return setting(filePath);\r\n    }\r\n\r\n    const regexSetting = Array.isArray(setting) ? setting : [setting];\r\n\r\n    return regexSetting.some(i => i.test(filePath));\r\n};\r\n","import { readFile, parse } from './../utils';\r\nimport { matchesRuleUsage } from './../rule';\r\n\r\nimport {\r\n    FileToData,\r\n    FileToDependency,\r\n    Level,\r\n    RuleDefinition,\r\n    RuleUsage,\r\n    RuleApplications,\r\n    RuleApplicationResult,\r\n    RuleToRuleApplicationResult,\r\n} from './../types';\r\n\r\nconst readFileData = (filePath: string): FileToData => {\r\n    const source = readFile(filePath);\r\n    // We parse .js-files only at the moment\r\n    const ast = filePath.endsWith('.js') ? () => parse(source) : undefined;\r\n\r\n    return {\r\n        [filePath]: Object.freeze({\r\n            source,\r\n            ast,\r\n        }),\r\n    };\r\n};\r\n\r\nexport const readFilesData = (files: string[]): FileToData => {\r\n    const result = Object.freeze(\r\n        files.reduce(\r\n            (acc, filePath) => {\r\n                return {\r\n                    ...acc,\r\n                    ...readFileData(filePath),\r\n                };\r\n            },\r\n            {} as FileToData,\r\n        ),\r\n    );\r\n\r\n    return result;\r\n};\r\n\r\nconst createRuleApplicationResult = (\r\n    messageType: string,\r\n    ruleMessages: string[],\r\n): RuleApplicationResult => {\r\n    let result;\r\n\r\n    switch (messageType) {\r\n        case Level.ERROR:\r\n            result = {\r\n                errors: ruleMessages,\r\n            };\r\n            break;\r\n        case Level.OFF:\r\n            result = {\r\n                errors: [],\r\n            };\r\n            break;\r\n        case Level.WARNING:\r\n        default:\r\n            result = {\r\n                warnings: ruleMessages,\r\n            };\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nconst processRule = (\r\n    directory: string,\r\n    definition: RuleDefinition,\r\n    ruleUsage: RuleUsage,\r\n    filesData: FileToData,\r\n    dependencies: FileToDependency,\r\n) => {\r\n    const reducedFilesData = Object.freeze(\r\n        Object.keys(filesData)\r\n            .filter(i => matchesRuleUsage(directory, i, ruleUsage))\r\n            .reduce(\r\n                (acc, fileName) => ({\r\n                    ...acc,\r\n                    [fileName]: filesData[fileName],\r\n                }),\r\n                {} as FileToData,\r\n            ),\r\n    );\r\n\r\n    const ruleMessages = definition.onProject({\r\n        dependencies,\r\n        config: ruleUsage.config,\r\n        files: reducedFilesData,\r\n        rootPath: directory,\r\n    });\r\n    let messageType = ruleUsage.level;\r\n\r\n    if (!messageType || Object.values(Level).indexOf(messageType) === -1) {\r\n        messageType = Level.WARNING;\r\n    }\r\n\r\n    const ruleApplicationResult = createRuleApplicationResult(messageType, ruleMessages);\r\n\r\n    return ruleApplicationResult;\r\n};\r\n\r\nexport const applyProjectRules = (\r\n    directory: string,\r\n    filesData: FileToData,\r\n    dependencies: FileToDependency,\r\n    ruleApplications: RuleApplications,\r\n): RuleToRuleApplicationResult => {\r\n    const result = Object.entries(ruleApplications).reduce(\r\n        (acc, [ruleName, ruleApplication]) => {\r\n            const usage = Array.isArray(ruleApplication.usage)\r\n                ? ruleApplication.usage\r\n                : [ruleApplication.usage];\r\n            const definition = ruleApplication.definition;\r\n            let ruleApplicationResult;\r\n\r\n            ruleApplicationResult = usage\r\n                .map(usage => processRule(directory, definition, usage, filesData, dependencies))\r\n                .reduce(\r\n                    (acc, i) => ({\r\n                        errors: [...(acc.errors || []), ...(i.errors || [])],\r\n                        warnings: [...(acc.warnings || []), ...(i.warnings || [])],\r\n                    }),\r\n                    {\r\n                        errors: [],\r\n                        warnings: [],\r\n                    } as RuleApplicationResult,\r\n                );\r\n\r\n            return {\r\n                ...acc,\r\n                [ruleName]: ruleApplicationResult,\r\n            };\r\n        },\r\n        {} as RuleToRuleApplicationResult,\r\n    );\r\n\r\n    return result;\r\n};\r\n","export interface CosmiConfig {\r\n    filepath: string;\r\n    config: {\r\n        [prop: string]: any;\r\n    };\r\n}\r\n\r\nexport enum Level {\r\n    WARNING = 'warning',\r\n    ERROR = 'error',\r\n    OFF = 'off',\r\n}\r\n\r\nexport enum Reporter {\r\n    CONSOLE = 'console',\r\n    MOCHA = 'mocha',\r\n}\r\n\r\nexport interface RuleUsageConfig {\r\n    [prop: string]: any;\r\n}\r\n\r\nexport interface RuleUsage {\r\n    include?: RegExp | RegExp[] | Function;\r\n    exclude?: RegExp | RegExp[] | Function;\r\n    level?: Level;\r\n    config?: RuleUsageConfig;\r\n}\r\n\r\nexport interface Config {\r\n    root: string;\r\n    rulesDir?: string;\r\n    extensions?: string[];\r\n    rules: {\r\n        [ruleName: string]: RuleUsage | RuleUsage[];\r\n    };\r\n}\r\n\r\nexport interface FileData {\r\n    ast?: () => any;\r\n    source?: string;\r\n}\r\n\r\nexport interface FileToData {\r\n    [fileName: string]: FileData;\r\n}\r\n\r\nexport interface FileToDependency {\r\n    [fileName: string]: string[];\r\n}\r\n\r\nexport interface RuleApplicationResult {\r\n    errors?: string[];\r\n    warnings?: string[];\r\n}\r\n\r\nexport interface RuleToRuleApplicationResult {\r\n    [rule: string]: RuleApplicationResult;\r\n}\r\n\r\nexport interface OnProjectArgument {\r\n    config?: RuleUsageConfig;\r\n    dependencies: FileToDependency;\r\n    files: FileToData;\r\n    rootPath: string;\r\n}\r\nexport interface RuleDefinition {\r\n    onProject: (args: OnProjectArgument) => string[];\r\n}\r\n\r\nexport interface RuleDefinitions {\r\n    [ruleName: string]: RuleDefinition;\r\n}\r\n\r\nexport interface RuleApplication {\r\n    definition: RuleDefinition;\r\n    usage: RuleUsage | RuleUsage[];\r\n}\r\n\r\nexport interface RuleApplications {\r\n    [ruleName: string]: RuleApplication;\r\n}\r\n\r\nexport interface FileToRule {\r\n    [fileName: string]: RuleApplications;\r\n}\r\n\r\nexport interface LogEntry {\r\n    rule: string;\r\n    errors?: string[];\r\n    warnings?: string[];\r\n}\r\n\r\nexport interface StricterArguments {\r\n    silent?: boolean;\r\n    configPath?: string;\r\n    reporter?: Reporter;\r\n}\r\n\r\nexport interface ParsedImportsResult {\r\n    staticImports: string[];\r\n    dynamicImports: string[];\r\n}\r\n","import { FileToData, FileToDependency } from './../types';\r\nimport { default as extractPathFromImportString } from './extract-path';\r\nimport { default as getImports } from './parse-imports';\r\n\r\nexport default (\r\n    filesData: FileToData,\r\n    root: string[],\r\n    extensions: string[] | undefined,\r\n): FileToDependency => {\r\n    const result = Object.entries(filesData).reduce(\r\n        (acc, [filePath, data]) => {\r\n            if (!data.ast) {\r\n                return acc;\r\n            }\r\n\r\n            const imports = getImports(data.ast());\r\n            const dependencies = [...imports.staticImports, ...imports.dynamicImports].map(i =>\r\n                extractPathFromImportString(i, filePath, root, extensions),\r\n            );\r\n\r\n            return {\r\n                ...acc,\r\n                [filePath]: dependencies,\r\n            };\r\n        },\r\n        {} as FileToDependency,\r\n    );\r\n\r\n    return result;\r\n};\r\n","import * as path from 'path';\r\nimport { default as resolveImport } from './resolve-import';\r\n\r\nexport default (\r\n    importString: string,\r\n    filePath: string,\r\n    resolveRoots: string[],\r\n    extensions?: string[],\r\n): string => {\r\n    const potentialImportPaths = importString.startsWith('.')\r\n        ? [path.resolve(filePath, '..', importString)]\r\n        : resolveRoots.map(i => path.resolve(i, importString));\r\n\r\n    const result = resolveImport(potentialImportPaths, extensions) || importString;\r\n\r\n    return result;\r\n};\r\n","import * as fs from 'fs';\r\nimport * as path from 'path';\r\n\r\nexport default (potentialImportPaths: string[], extensions?: string[]): string | undefined => {\r\n    const extensionsToAdd = ['js', ...(extensions || [])];\r\n    const result = potentialImportPaths\r\n        .reduce(\r\n            (acc, importPath) => [\r\n                ...acc,\r\n                path.join(importPath, 'index.js'),\r\n                ...extensionsToAdd.map(i => `${importPath}.${i}`),\r\n                importPath,\r\n            ],\r\n            [] as string[],\r\n        )\r\n        .find(i => fs.existsSync(i) && !fs.lstatSync(i).isDirectory());\r\n\r\n    return result;\r\n};\r\n","// tslint:disable function-name\r\nimport traverse, { NodePath } from '@babel/traverse';\r\nimport { ParsedImportsResult } from '../types';\r\n\r\nexport default (ast: any): ParsedImportsResult => {\r\n    const state: ParsedImportsResult = {\r\n        dynamicImports: [],\r\n        staticImports: [],\r\n    };\r\n\r\n    traverse(\r\n        ast,\r\n        {\r\n            Identifier(path: NodePath) {\r\n                /* to get access to path */\r\n            },\r\n\r\n            ImportDeclaration(path: NodePath, state: ParsedImportsResult) {\r\n                state.staticImports.push(path.node.source.value);\r\n            },\r\n            ExportNamedDeclaration(path: NodePath, state: ParsedImportsResult) {\r\n                if (path.node.source) {\r\n                    state.staticImports.push(path.node.source.value);\r\n                }\r\n            },\r\n            ExportAllDeclaration(path: NodePath, state: ParsedImportsResult) {\r\n                if (path.node.source) {\r\n                    state.staticImports.push(path.node.source.value);\r\n                }\r\n            },\r\n            CallExpression(path: NodePath, state: ParsedImportsResult) {\r\n                if (\r\n                    path.node.callee &&\r\n                    (path.node.callee.type === 'Import' ||\r\n                        (path.node.callee.type === 'Identifier' &&\r\n                            path.node.callee.name === 'require')) &&\r\n                    path.node.arguments &&\r\n                    path.node.arguments.length > 0\r\n                ) {\r\n                    state.dynamicImports.push(path.node.arguments[0].value);\r\n                }\r\n            },\r\n        },\r\n        null,\r\n        state,\r\n    );\r\n\r\n    return state;\r\n};\r\n","import { LogEntry } from './../types';\r\n\r\nexport { default as consoleLogger } from './console';\r\nexport { default as mochaLogger } from './mocha';\r\nexport { compactProjectLogs } from './flatten';\r\nexport const getErrorCount = (projectLogs: LogEntry[]) =>\r\n    Object.values(projectLogs).reduce((acc, i) => acc + ((i.errors && i.errors.length) || 0), 0);\r\n","import chalk from 'chalk';\r\nimport { LogEntry } from './../types';\r\n\r\nexport default (logs: LogEntry[]): void => {\r\n    if (!logs.length) {\r\n        return;\r\n    }\r\n\r\n    console.log(chalk.bgBlackBright('Project'));\r\n\r\n    logs.forEach(log => {\r\n        if (log.warnings) {\r\n            log.warnings.forEach(warning => {\r\n                console.log(chalk.yellow('warning: ') + chalk.gray(log.rule) + ' ' + warning);\r\n            });\r\n        }\r\n\r\n        if (log.errors) {\r\n            log.errors.forEach(error => {\r\n                console.log(chalk.red('error: ') + chalk.gray(log.rule) + ' ' + error);\r\n            });\r\n        }\r\n    });\r\n};\r\n","import * as fs from 'fs';\r\nimport { LogEntry } from './../types';\r\n\r\nconst reportFileName = 'stricter.json';\r\n\r\nconst encode = (str: string) => {\r\n    const substitutions = {\r\n        '&:': '&amp;',\r\n        '\"': '&quot;',\r\n        \"'\": '&apos;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n    };\r\n\r\n    const result = Object.entries(substitutions).reduce((acc, [original, substitution]) => {\r\n        return acc.replace(new RegExp(original, 'g'), substitution);\r\n    }, str);\r\n\r\n    return result;\r\n};\r\n\r\nexport default (logs: LogEntry[]): void => {\r\n    const now = new Date();\r\n    const failuresCount = logs.reduce((acc, i) => acc + ((i.errors && i.errors.length) || 0), 0);\r\n\r\n    const report = {\r\n        stats: {\r\n            tests: failuresCount,\r\n            passes: 0,\r\n            failures: failuresCount,\r\n            duration: 0,\r\n            start: now,\r\n            end: now,\r\n        },\r\n        failures: logs.map(log => ({\r\n            title: log.rule,\r\n            fullTitle: log.rule,\r\n            duration: 0,\r\n            errorCount: (log.errors && log.errors.length) || 0,\r\n            error: log.errors && log.errors.map(i => encode(i)).join('\\n'),\r\n        })),\r\n        passes: [],\r\n        skipped: [],\r\n    };\r\n\r\n    fs.writeFileSync(reportFileName, JSON.stringify(report, null, 2), 'utf-8');\r\n};\r\n","import { RuleToRuleApplicationResult, LogEntry } from './../types';\r\n\r\nexport const compactProjectLogs = (projectResult: RuleToRuleApplicationResult): LogEntry[] => {\r\n    const result = Object.entries(projectResult)\r\n        .map(([rule, applicationResult]) => ({\r\n            rule,\r\n            errors: applicationResult.errors,\r\n            warnings: applicationResult.warnings,\r\n        }))\r\n        .filter(i => (i.warnings && i.warnings.length) || (i.errors && i.errors.length));\r\n\r\n    return result;\r\n};\r\n","import * as program from 'commander';\r\nimport * as isCi from 'is-ci';\r\nimport stricter from './stricter';\r\n\r\nexport default (): number => {\r\n    program\r\n        .version(process.env.STRICTER_VERSION as string)\r\n        .option('-c, --config <path>', 'specify config location')\r\n        .option(\r\n            '-r, --reporter <console|mocha>',\r\n            'specify reporter',\r\n            /^(console|mocha)$/i,\r\n            'console',\r\n        )\r\n        .parse(process.argv);\r\n    const result = stricter({\r\n        configPath: program.config,\r\n        reporter: program.reporter,\r\n        silent: isCi,\r\n    });\r\n\r\n    return result;\r\n};\r\n"]}